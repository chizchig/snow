name: Build and Deployment

on:
    push:
        branches:
            - master
    pull_request:
        branches:
            - master

permissions:
    id-token: write
    contents: read

jobs:
    argocd:
        name: 'Argocd'
        runs-on: ubuntu-latest

        steps:
        - name: 'Checkout'
          uses: actions/checkout@v2

        - name: 'Verify System Architecture'
          run: |
            uname -a
            arch

        - name: 'Install Docker'
          run: |
            sudo apt-get Docker
            sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
            sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
            sudo apt-get update
            sudo apt-get install -y docker-ce docker-ce-cli containerd.io
            sudo systemctl start docker
            sudo systemctl enable docker

        - name: 'Install Minikube'
          run: |
             curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
             chmod +x minikube
             sudo mv minikube /usr/local/bin/

        - name: 'Start Minikube'
          run: |
            minikube start --driver=docker

        - name: 'Set up Kuberconfig for Minikube'
          run: |
            mkdir -p $HOME/.kube
            minikube update-context

        - name: 'Verify Kubernetes Context'
          run: kubectl config current-context

        - name: 'Apply Kustomization'
          run: |
              kubectl apply -k ./overlay/dev

        - name: Install ArgoCD
          run: |
            # kubectl create namespace dev
            kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
            kubectl patch svc argocd-server -n argocd -p '{"spec": {"type": "LoadBalancer"}}

        - name: Check ArgoCD version
          run: kubectl get deployments -n argocd -o jsonpath='{.items[*].spec.template.spec.containers[*].image}' | tr -s '[[:space:]]' '\n' | sort | uniq


        - name: Get ArgoCD admin password
          run: |
            ARGO_PWD=$(kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d)
            echo "ArgoCD admin password: $ARGO_PWD"
            echo "ARGO_PWD=$ARGO_PWD" >> $GITHUB_ENV